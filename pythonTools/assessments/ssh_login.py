#!/usr/bin/env python3
#source https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/ssh_login.py
import sys
try:
    import nmap
except:
    sys.exit("[!] Install the nmap library: pip install python-nmap")
try:
    import netifaces
except:
    sys.exit("[!] Install the netifaces library: pip install netifaces")
from netiface.ifacesdetails  import *

def target_identifier(dir,ips,port_num,ifaces):
    ssh_hosts = "%s/ssh_hosts" % (dir)
    scanner = nmap.PortScanner()
    excludes=["127.0.0.2"]
    e = open(ssh_hosts, 'w')
    for k,v in ifaces.items():
       #if(not v['addr'].startswith("127.")):
       excludes.append(v['addr'])
       #print(v['addr'])
    excludes=str(excludes).strip("[]").replace(", ",",");
    excludes=f'--exclude {excludes}'
    scanner.scan(arguments=excludes,hosts=ips,ports=port_num)
    if not scanner.all_hosts():
        e.closed
        sys.exit("[!] No viable targets were found!")
    for host in scanner.all_hosts():
            home_dir="/root"
            ssh_hosts = "%s/ssh_hosts" % (dir)
            if 'ssh' in scanner[host]['tcp'][int(port_num)]['name']:
                if 'open' in scanner[host]['tcp'][int(port_num)]['state']:
                    print(f"[+] Adding host {host} to {ssh_hosts} since the service is active on {port_num}")
                    e.write(host + "\n")
    e.closed
    if ssh_hosts:
        return ssh_hosts

def resource_file_builder(dir, user, passwd,port_num, hosts_file):
    ssh_login_rc ="%s/ssh_login.rc" % (dir)
    content= "use auxiliary/scanner/ssh/ssh_login \n"
    content+="set username " + user + "\n"
    content+="set password " + passwd + "\n"
    content+="set rhosts file:" + hosts_file + "\n"
    content+="set rport " + port_num + "\n"
    content+="run\n"
    f = open(ssh_login_rc, 'w')
    f.write(content)
    f.closed

if __name__ == '__main__':
# Argument Validator
    if len(sys.argv) != 5:
        sys.exit("[!] Please provide four arguments the first being the targets the second the ports, the third the username, and the fourth the password")
    hosts = str(sys.argv[1])
    ports = str(sys.argv[2])    
    username = str(sys.argv[3])
    password = str(sys.argv[4])
    home_dir="/root"
    gateways = get_gateways()
    network_ifaces = get_networks(gateways)
    hosts_file = target_identifier(home_dir,hosts,ports,network_ifaces)
    resource_file_builder(home_dir, username, password, ports, hosts_file)
