#!/usr/bin/env python
#source https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/hostdetails.py
import os
import socket
import subprocess
import shutil
import errno
if os.name != "nt":
    import fcntl
import urllib2
import struct
import uuid

class NetworkInfo:
  #constructeur
  def __init__(this):
   this.__s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
   this.__hostname = socket.gethostbyname(socket.gethostname())
   this.__hostdata = "None"
   this.__windows_ip = "None"
   this.__eth_ip = "None"
   this.__wlan_ip = "None"
   this.__host_fqdn = "None"
   this.__eth_mac = "None"
   this.__wlan_mac = "None"
   this.__windows_mac = "None"
  #getter
  def __get_ip(this,inter):
    ip_addr = socket.inet_ntoa(fcntl.ioctl(this.__s.fileno(), 0x8915, struct.pack('256s', inter[:15]))[20:24])
    return ip_addr

  def __get_mac_address(this,inter):
    info = fcntl.ioctl(this.__s.fileno(), 0x8927,struct.pack('256s',inter[:15]))
    mac_address = ''.join(['%02x:' % ord(char) for char in info[18:24]])[:-1]
    return mac_address

  def get_localhost_details(this,interfaces_eth, interfaces_wlan):
   
   
   if this.__hostname.startswith("127.") and os.name != "nt":#if linux
     this.__hostdata = socket.gethostbyaddr(socket.gethostname())
     this.__hostname = str(this.__hostdata[1]).strip('[]')
     this.__host_fqdn = socket.getfqdn()
     for interface in interfaces_eth:
      try:
        this.__eth_ip = this.__get_ip(interface)
        if not "None" in this.__eth_ip:
          this.__eth_mac = this.__get_mac_address(interface)
        break
      except IOError:
         pass
     for interface in interfaces_wlan:
      try:
        this.__wlan_ip = this.__get_ip(interface)
        if not "None" in this.__wlan_ip:
          this.__wlan_mac = this.__get_mac_address(interface)
        break
      except IOError:
        pass
   else:
      this.__windows_ip = socket.gethostbyname(socket.gethostname())
      this.__windows_mac = hex(getnode()).lstrip('0x')
      this.__windows_mac = ':'.join(pos1+pos2 for pos1,pos2 in zip(windows_mac[::2],windows_mac[1::2]))
      this.__hostdata = socket.gethostbyaddr(socket.gethostname())
      this.__hostname = str(hostdata[1]).strip("[]\'")
      this.__host_fqdn = socket.getfqdn()
   return this.__hostdata, this.__hostname, this.__windows_ip, this.__eth_ip, this.__wlan_ip, this.__host_fqdn,this.__eth_mac, this.__wlan_mac, this.__windows_mac
#toString
  def __repr__(this):
   return "hostdata: {}\nhostname: {}\nwindows ip: {}\neth ip: {}\nwlan ip: {}\nhost fqdn: {}\neth mac: {}\nwlan mac: {}\nwindows mac: {}".format(this.__hostdata, this.__hostname, this.__windows_ip, this.__eth_ip, this.__wlan_ip, this.__host_fqdn,this.__eth_mac, this.__wlan_mac, this.__windows_mac)
########################################################################################################################
#Main#
######



if __name__=="__main__":
 inter_eth = ["eth0", "eth1", "eth2", "eth3"]
 inter_wlan = ["wlan0", "wlan1", "wlan2", "wlan3", "wifi0", "wifi1", "wifi2", "wifi3", "ath0", "ath1", "ath2", "ath3"]
 myNetwork=NetworkInfo();
 myNetwork.get_localhost_details(inter_eth,inter_wlan)
 print myNetwork;
